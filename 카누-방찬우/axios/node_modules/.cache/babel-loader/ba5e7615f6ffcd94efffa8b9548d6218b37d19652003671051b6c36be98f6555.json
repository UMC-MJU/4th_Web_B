{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\db_son\\\\movie_app_2020\\\\src\\\\Movie.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Movie에는 동적 데이터가 필요 없으므로 state도 필요 없음. 그래서 함수형 컴포넌트로 작성할 것\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie(_ref) {\n  let {\n    id,\n    title,\n    year,\n    summary,\n    poster\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"movie__data\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"movie__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      class: \"movie__year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"movie__summary\",\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n// Movie에 넘어와야 하는 영화 데이터를 정의하고 관리하기 위해 prop-types를 사용함\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired\n};\n// poster props는 영화 포스트 이미지 주소를 저장하기 위함\n\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Movie","_ref","id","title","year","summary","poster","class","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","number","isRequired","string","$RefreshReg$"],"sources":["C:/Users/db_son/movie_app_2020/src/Movie.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Movie에는 동적 데이터가 필요 없으므로 state도 필요 없음. 그래서 함수형 컴포넌트로 작성할 것\r\n\r\nfunction Movie({id,title,year,summary,poster} ) {\r\n    return (\r\n        <div class=\"movie__data\">\r\n            <h3 class=\"movie__title\">{title}</h3>\r\n            <h5 class=\"movie__year\">{year}</h5>\r\n            <p class=\"movie__summary\">{summary}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Movie에 넘어와야 하는 영화 데이터를 정의하고 관리하기 위해 prop-types를 사용함\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n};\r\n// poster props는 영화 포스트 이미지 주소를 저장하기 위함\r\n\r\nexport default Movie;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAAC,IAAA,EAAkC;EAAA,IAAjC;IAACC,EAAE;IAACC,KAAK;IAACC,IAAI;IAACC,OAAO;IAACC;EAAM,CAAC,GAAAL,IAAA;EACzC,oBACIF,OAAA;IAAKQ,KAAK,EAAC,aAAa;IAAAC,QAAA,gBACpBT,OAAA;MAAIQ,KAAK,EAAC,cAAc;MAAAC,QAAA,EAAEL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACrCb,OAAA;MAAIQ,KAAK,EAAC,aAAa;MAAAC,QAAA,EAAEJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnCb,OAAA;MAAGQ,KAAK,EAAC,gBAAgB;MAAAC,QAAA,EAAEH;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrC;AAEd;;AAEA;AAAAC,EAAA,GAVSb,KAAK;AAWdA,KAAK,CAACc,SAAS,GAAG;EACdZ,EAAE,EAAEL,SAAS,CAACkB,MAAM,CAACC,UAAU;EAC/BZ,IAAI,EAAEP,SAAS,CAACkB,MAAM,CAACC,UAAU;EACjCb,KAAK,EAAEN,SAAS,CAACoB,MAAM,CAACD,UAAU;EAClCX,OAAO,EAAER,SAAS,CAACoB,MAAM,CAACD,UAAU;EACpCV,MAAM,EAAET,SAAS,CAACoB,MAAM,CAACD;AAC7B,CAAC;AACD;;AAEA,eAAehB,KAAK;AAAC,IAAAa,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}