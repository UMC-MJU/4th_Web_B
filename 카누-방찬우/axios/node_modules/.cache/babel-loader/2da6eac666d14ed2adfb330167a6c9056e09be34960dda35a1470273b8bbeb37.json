{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\db_son\\\\movie_app_2020\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Food(_ref) {\n  let {\n    name,\n    pic\n  } = _ref;\n  // {fav} = props; {fav}\n  // props.fav\n  return (\n    /*#__PURE__*/\n    // div로 묶어서 리턴한다. h1, img 따로 리턴하는 게 아니라\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Best Player: \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), \",\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pic,\n        alt: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// map 함수는 배열의 모든 원소마다 특정 작업을 하는 함수를 적용하고\n// 그 함수가 반환한 결과를 모아서 배열로 반환한다.\n_c = Food;\nconst players = [{\n  id: 1,\n  name: \"Theo Hernandez\",\n  image: 'https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt03ab16d69a741aa0/60db07560bc1b20fa6b6e295/9e3231059b9d40c4194744dab2b5936b1b35816f.jpg'\n}, {\n  id: 2,\n  name: \"Phil Foden\",\n  image: 'https://e0.365dm.com/21/04/2048x1152/skysports-phil-foden-manchester-city_5343992.jpg'\n}, {\n  id: 3,\n  name: \"Rodrigo\",\n  image: \"https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt497e050c56cd823b/61c82cc15d616f4311468f4b/Rodri_Man_City_UCL_2021-22.jpg\"\n}, {\n  id: 4,\n  name: \"Rafael leao\",\n  image: \"https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt93fc37f9aeeab515/61ea94bf1ed54f3c3403cce6/leao-hands.jpg\"\n}];\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: players.map(player => /*#__PURE__*/_jsxDEV(Food, {\n      name: player.name,\n      pic: player.image\n    }, player.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Food\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Food","_ref","name","pic","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","players","id","image","App","map","player","_c2","$RefreshReg$"],"sources":["C:/Users/db_son/movie_app_2020/src/App.js"],"sourcesContent":["import React from \"react\";\n\n\nfunction Food({name, pic}) {\n  // {fav} = props; {fav}\n  // props.fav\n  return (\n    // div로 묶어서 리턴한다. h1, img 따로 리턴하는 게 아니라\n    <div>\n      <h1>Best Player: {name}</h1>,\n      <img src={pic} alt={name}></img>\n    </div>\n  )\n}\n \n// map 함수는 배열의 모든 원소마다 특정 작업을 하는 함수를 적용하고\n// 그 함수가 반환한 결과를 모아서 배열로 반환한다.\nconst players = [\n  {\n    id: 1,\n    name:\"Theo Hernandez\",\n    image: 'https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt03ab16d69a741aa0/60db07560bc1b20fa6b6e295/9e3231059b9d40c4194744dab2b5936b1b35816f.jpg'\n  },\n  {\n    id: 2,\n    name:\"Phil Foden\",\n    image:'https://e0.365dm.com/21/04/2048x1152/skysports-phil-foden-manchester-city_5343992.jpg'\n  },\n  {\n    id: 3,\n    name:\"Rodrigo\",\n    image:\"https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt497e050c56cd823b/61c82cc15d616f4311468f4b/Rodri_Man_City_UCL_2021-22.jpg\"\n  },\n  {\n    id: 4,\n    name:\"Rafael leao\",\n    image:\"https://assets.goal.com/v3/assets/bltcc7a7ffd2fbf71f5/blt93fc37f9aeeab515/61ea94bf1ed54f3c3403cce6/leao-hands.jpg\"\n  }\n];\n\n\nfunction App() {\n  \n  return (\n    <div>\n      {players.map(player => (\n         <Food key ={player.id} name = {player.name} pic = {player.image} />\n      ))}\n    </div>\n    \n  ); \n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,IAAIA,CAAAC,IAAA,EAAc;EAAA,IAAb;IAACC,IAAI;IAAEC;EAAG,CAAC,GAAAF,IAAA;EACvB;EACA;EACA;IAAA;IACE;IACAF,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAAK,QAAA,GAAI,eAAa,EAACF,IAAI;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,KAC5B,eAAAT,OAAA;QAAKU,GAAG,EAAEN,GAAI;QAACO,GAAG,EAAER;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC5B;AAEV;;AAEA;AACA;AAAAG,EAAA,GAbSX,IAAI;AAcb,MAAMY,OAAO,GAAG,CACd;EACEC,EAAE,EAAE,CAAC;EACLX,IAAI,EAAC,gBAAgB;EACrBY,KAAK,EAAE;AACT,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLX,IAAI,EAAC,YAAY;EACjBY,KAAK,EAAC;AACR,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLX,IAAI,EAAC,SAAS;EACdY,KAAK,EAAC;AACR,CAAC,EACD;EACED,EAAE,EAAE,CAAC;EACLX,IAAI,EAAC,aAAa;EAClBY,KAAK,EAAC;AACR,CAAC,CACF;AAGD,SAASC,GAAGA,CAAA,EAAG;EAEb,oBACEhB,OAAA;IAAAK,QAAA,EACGQ,OAAO,CAACI,GAAG,CAACC,MAAM,iBAChBlB,OAAA,CAACC,IAAI;MAAkBE,IAAI,EAAIe,MAAM,CAACf,IAAK;MAACC,GAAG,EAAIc,MAAM,CAACH;IAAM,GAApDG,MAAM,CAACJ,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAGV;AAACU,GAAA,GAVQH,GAAG;AAYZ,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}