{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\db_son\\\\movie_app_2020\\\\src\\\\Movie.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Movie에는 동적 데이터가 필요 없으므로 state도 필요 없음. 그래서 함수형 컴포넌트로 작성할 것\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie(_ref) {\n  let {\n    id,\n    title,\n    year,\n    summary,\n    poster,\n    genres\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: poster,\n      alt: title,\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie__data\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"movie__title\",\n        style: {\n          backgroundColor: 'red'\n        },\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"movie__year\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie__summary\",\n        children: summary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n// Movie에 넘어와야 하는 영화 데이터를 정의하고 관리하기 위해 prop-types를 사용함\n_c = Movie;\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n// poster props는 영화 포스트 이미지 주소를 저장하기 위함\n\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Movie","_ref","id","title","year","summary","poster","genres","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","propTypes","number","isRequired","string","arrayOf","$RefreshReg$"],"sources":["C:/Users/db_son/movie_app_2020/src/Movie.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Movie에는 동적 데이터가 필요 없으므로 state도 필요 없음. 그래서 함수형 컴포넌트로 작성할 것\r\n\r\nfunction Movie({id,title,year,summary,poster, genres} ) {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\" style={{backgroundColor: 'red'}}>{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <p className=\"movie__summary\">{summary}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Movie에 넘어와야 하는 영화 데이터를 정의하고 관리하기 위해 prop-types를 사용함\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n// poster props는 영화 포스트 이미지 주소를 저장하기 위함\r\n\r\nexport default Movie;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,KAAKA,CAAAC,IAAA,EAA0C;EAAA,IAAzC;IAACC,EAAE;IAACC,KAAK;IAACC,IAAI;IAACC,OAAO;IAACC,MAAM;IAAEC;EAAM,CAAC,GAAAN,IAAA;EACjD,oBACIF,OAAA;IAAKS,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBV,OAAA;MAAKW,GAAG,EAAEJ,MAAO;MAACK,GAAG,EAAER,KAAM;MAACA,KAAK,EAAEA;IAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9ChB,OAAA;MAAKS,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBV,OAAA;QAAIS,SAAS,EAAC,cAAc;QAACQ,KAAK,EAAE;UAACC,eAAe,EAAE;QAAK,CAAE;QAAAR,QAAA,EAAEN;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC1EhB,OAAA;QAAIS,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEL;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACvChB,OAAA;QAAGS,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAAEJ;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd;;AAEA;AAAAG,EAAA,GAbSlB,KAAK;AAcdA,KAAK,CAACmB,SAAS,GAAG;EACdjB,EAAE,EAAEL,SAAS,CAACuB,MAAM,CAACC,UAAU;EAC/BjB,IAAI,EAAEP,SAAS,CAACuB,MAAM,CAACC,UAAU;EACjClB,KAAK,EAAEN,SAAS,CAACyB,MAAM,CAACD,UAAU;EAClChB,OAAO,EAAER,SAAS,CAACyB,MAAM,CAACD,UAAU;EACpCf,MAAM,EAAET,SAAS,CAACyB,MAAM,CAACD,UAAU;EACnCd,MAAM,EAAEV,SAAS,CAAC0B,OAAO,CAAC1B,SAAS,CAACyB,MAAM,CAAC,CAACD;AAChD,CAAC;AACD;;AAEA,eAAerB,KAAK;AAAC,IAAAkB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}